# vim: set ft=zsh expandtab:

clown() {
    zmodload zsh/regex
    if [[ -z $1 ]]; then
        print 1>&2 "Usage: $0 <HTTPS git url> [DEST_NAME]"
        return 1
    fi

    local URL
    # convert https:// git repo URLs into SSH URLs
    if [[ $1 -regex-match ^(git@[^:]+:[^/]+/[^/]+) ]]; then
        # SSH-style URL
        URL=$MATCH
    elif [[ $1 -regex-match ^http ]]; then
        # https-style URL
        URL=${1/http*:\/\//}
        URL=${URL#*@}
        URL=${URL/\//:}
        if [[ $URL -regex-match ^([^:]+:[^/]+/[^/]+) ]]; then
            URL=git@$MATCH
        else
            URL=git@$URL
        fi
    elif [[ $1 -regex-match gitlab.cs.usu.edu:[^/]+/[^/]+ ]]; then
        # URL is a path like gitlab.cs.usu.edu:username/cs1440-last-first-assn#
        # Prepend git@
        URL=git@$1
    elif [[ $1 -regex-match [^/]+/[^/]+ ]]; then
        # URL is a path like username/cs1440-last-first-assn#
        # Prepend the GitLab SSH URL
        URL=git@gitlab.cs.usu.edu:$1
    else
        print 1>&2 Invalid URL
        return 1
    fi

    # If $2 is unset and the URL looks like an assignment
    # (i.e. matches .*/cs[0-9]{4}-last-first-assn[0-9](.git)?)
    # set $DEST to "last-first-a[0-9]"
    local DEST
    if [[ -n $2 ]]; then
        DEST=$2
        print "Cloning $URL into $DEST..."
    elif [[ $URL -regex-match git@gitlab.cs.usu.edu:[^/]+/cs[0-9]{4}-(.*)-(assn|proj)([0-9](\.[0-9])?)(.git)?$ ]]; then
        DEST="${match[1]}-${match[2]:0:1}${match[3]}"
        print "Cloning $URL into $DEST..."
    else
        print "Cloning $URL..."
    fi

    git clone $URL $DEST
}
